# Document metadata. metadata.yaml is used by documenteer and other tools
# to build the document and index it. It should be maintained alongside the
# document in git and kept up to date.

# The series identifier. E.g. SQR, DMTN, SMTN, LDM, LSE, etc.
series: "SQR"

# Document number, as a string. It should be three digits, padded with leading zeros
serial_number: "073"

# Serial number of the document. E.g. SQR-001
# NOTE: this field is *planned* for deprecation
doc_id: "SQR-073"

# Title of the document, without the series/serial designation
doc_title: "RSP quotas and rate limiting"

# Author names, ordered as a list. Each author name should be formatted as 'First Last'
authors:
  - "Russ Allbery"

# Current document revision date, YYYY-MM-DD
# Only set this field if you need to manually fix the revision date;
# the revision date is obtained from the HEAD Git commit otherwise.
# last_revised: 'YYYY-MM-DD'

# Version. Use semantic versioning, e.g., 1.0.0, including .dev, as necessary.
# This version string should correspond to the git tag when the document is
# published on Zenodo. If left commented out, the current Git branch is used
# instead version: '1.0.0'

# Digital Object Identifier (DOI). Uncomment if available.
# Keep this DOI updated as new releases are pushed to Zenodo
# doi: 10.5281/zenodo.#####

# Copyright statement
copyright: "2022, Association of Universities for Research in Astronomy, Inc. (AURA)"

# Description. A short, 1-2 sentence statemement used by document indices.
description: >-
  Requirements, options, and proposed design for quota management and API rate
  limiting in the Rubin Science Platform.

# Abstract, if available
abstract: >-
  The Rubin Science Platform is a shared computing environment and thus is
  vulnerable to resource starvation or excessive cost if one user (possibly
  accidentally) consumes too many resources. We therefore want to impose
  automatically-enforced limits on the resources available to a user. In some
  cases, these can be statically enforced or delegated to underlying
  infrastructure, such as resource limits for user notebooks. In other cases,
  such as API rate limits, they need to be dynamically calculated and imposed
  by Rubin code. This tech note discusses the requirements and possible
  implementation options and proposes an initial design.

# URL where this document is published by Read the Docs. e.g. http://sqr-001.lsst.codes
url: "https://sqr-073.lsst.io"

# LSST Docushare URL, if authoritative versions of this are are stored there.
# Leave as an empty string or comment out this key if there is no Docushare URL.
docushare_url: ""

# GitHub repo URL
github_url: "https://github.com/lsst-sqre/sqr-073"
